name: Linux C/C++ CI

on:
  push:
    branches: [ v11.4.6-thinos ]
  pull_request:
    branches: [ v11.4.6-thinos ]

defaults:
  run:
    working-directory: ./

jobs:
  build:

    runs-on: [self-hosted, Linux, X64]
    env:
      DEPOT_TOOLS_PATH: /opt/depot_tools/

    steps:
    - name: path
      run: |
        realpath .
    - name: install tools
      run: |
        curl -o node-v15.10.0-linux-x64.tar.xz https://nodejs.org/dist/v15.10.0/node-v15.10.0-linux-x64.tar.xz
        tar xf node-v15.10.0-linux-x64.tar.xz
        sudo apt-get -y --force-yes install build-essential curl clang libdbus-1-dev libgtk-3-dev libnotify-dev libgnome-keyring-dev libasound2-dev libcap-dev libcups2-dev libxtst-dev libxss1 libnss3-dev gcc-multilib g++-multilib curl gperf bison python-dbusmock openjdk-8-jre
    - name: install depot tools
      run: |
        if [ !-d "$DEPOT_TOOLS_PATH" ]; then
          cd /opt
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        fi
    - name: gclient config
      run: |
        export PATH=/opt/depot_tools:/opt/actions-runner/_work/thinos-electron/thinos-electron/node-v15.10.0-linux-x64/bin:$PATH
        echo yes| npx @electron/check-python-tls
        
        gclient config --name "src/electron" --unmanaged https://github.com/dell/thinos-electron@v11.4.6-thinos
    - name: gclient sync
      run: |
        export GIT_CACHE_PATH="${HOME}/.git_cache"
        mkdir -p "${GIT_CACHE_PATH}"
        rm -rf "${GIT_CACHE_PATH}"/github.com-dell-*
        rm -rf src/electron/
        export PATH=/opt/depot_tools:/opt/actions-runner/_work/thinos-electron/thinos-electron/node-v15.10.0-linux-x64/bin:$PATH
        #gclient sync --with_branch_heads --with_tags
        gclient sync -f
    - name: ninja build
      run: |
        export PATH=/opt/depot_tools:/opt/actions-runner/_work/thinos-electron/thinos-electron/node-v15.10.0-linux-x64/bin:$PATH
        cd src
        export CHROMIUM_BUILDTOOLS_PATH=`pwd`/buildtools
        gn gen out/Release --args="import(\"//electron/build/args/release.gn\") $GN_EXTRA_ARGS"
        ninja -C out/Release electron
        electron/script/strip-binaries.py -d out/Release
        ninja -C out/Release electron:electron_dist_zip
    - name: version
      run: |
        echo "ELECTRON_VAR=`cat src/out/Release/version`" >> $GITHUB_ENV
        echo ${{env.ELECTRON_VAR}}
    - uses: actions/upload-artifact@v2
      with:
        name: electron-${{env.ELECTRON_VAR}}
        path: src/out/Release/dist.zip
